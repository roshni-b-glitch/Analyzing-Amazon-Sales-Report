# -*- coding: utf-8 -*-
"""Analyzing Amazon Sales Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ogAyGK_1-IEDR3l6m2i9TPWkrRJwuKUY
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

pd.read_csv('/content/Amazon Sale Report.csv')

df=pd.read_csv('/content/Amazon Sale Report.csv')

df.head()

df.tail()

df.info()# checking for datatype information

df.isnull()#cheking for null values.



"""Here we got True and False. True means it has null values and False means i do not have any null values.
If we are facing a lot of null values then probably the column is of no use for us, or else if e have some null values we can probably assign it "unknown" or "others".

New and Pendings column has a lot of null values so will drop it.
"""

#dropping the null values.
df.drop(['New','PendingS'],axis=1,inplace=True) #axis tells to drop column not rows

#after dropping check if the column is dropped?
df.info()

"""Here the two columns are dropped and now if we see fullfilled-by column we can find that some of the values of NAN so instead of dropping the whole column we can simply put "others" in place of NAN.

We are doing it because in analysis of our project fullfilled by Easy Ship is done by amazon's logistic service , so here we can compare amazon's logistic services with others they may be a other country or may be the data was not recorded.
"""

df['fulfilled-by'].fillna('others',inplace=True)

#check if the NAN is filled by others in fulfilled-by column or not?
df.head()

"""Now as we did df.info() above it is given that our date is in object datatype. if date is in object datatype Python treats it as plain text, making it difficult to analyze. so converting it into datetime format will help us to make datetime as our index which will hwlp in analysis"""

df["Date"]=pd.to_datetime(df["Date"])

#checking if the object is converted to datetime or not?
df.info()

#set datetime as index
df.set_index('Date',inplace=True)

df.info()

df['ship-postal-code'] = df['ship-postal-code'].astype(str)

df.head()

#dropping the original index
df.drop(columns=['index'],inplace=True)

df.info()

print(df.index)

"""here we have successfullu checked for the index column"""

df.info()

#check for null values again
df.isnull().sum()

"""Here we have 35 missing values in ship-city,ship-state,ship-postal-code,ship-country, so we can safely drop the null values as they are not a big deal in much data."""

df = df.dropna(subset=['ship-city', 'ship-state', 'ship-postal-code', 'ship-country'])

df.isnull().sum()

df.isnull().sum()

df.info()

df.head()

# Set Date as index
df.set_index('Date', inplace=True)

print(df.info())

# Check for duplicate rows
duplicates = df[df.duplicated()]
print(duplicates)

# Check for exact duplicates
df.duplicated().sum()

!git config --global user.name "roshni-b-glitch"
!git config --global user.email "roshnibarua83@gmail.com"

!git clone https://github.com/roshni-b-glitch/Analyzing-Amazon-Sales-Report.

print(df.columns.tolist())  # Check again

df.index

df.isnull().sum()

df[df['Amount'].isnull()].head()

df.isnull().sum()

df[df['Amount'].isnull()]['Courier Status'].value_counts()

df['Amount'].fillna(0, inplace=True)
df['currency'].fillna('NA', inplace=True)
#let's fill NA in place of missing values it will be useful whenever we need toanalyx=ze cancellation of order

df.isnull().sum()

